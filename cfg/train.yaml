model:
#  model_architecture_file_path: "/work/scratch/dziuba/repos/ma_code/cfg/model_example.yaml"
  model_architecture:
#    model_architecture_origin: torchvision
#    model_architecture_name: deeplabv3_resnet50
    model_architecture_origin: segmentation_models_pytorch
    model_architecture_name: unet_resnet50
    pretrained: True
    embedding_dims: 50

  AMP: false
  channels: 3
  output_creation:
    multi_sphere_association:
      cat_id_radius_order_map_list: [ 7, 8, 11, 12, 13, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33 ] #describes the mapping of the semantic class to the order of hyperspheres - from small hypersphere to big or regarding to index
      radius_diff_dist: 1           # difference to next class association radius
      radius_start_val: 0           # start radius value
      soft_association_margin: 0.5  # max deviation from radius to still associate to closest radius
      instance_clustering_method:
        dbscan: {} # no args specified





#  norm_type: 'instance'
#  classes: 7

optimizer:
  optim_type: "adam"
  lr: 0.001
  eps: 0.00000001
  weight_decay: 0

scheduler:
  sched_type: "reduce_on_plateau"
  eps: 0.00000001
  factor: 0.1
  patience: 10
  threshold: 0.0001
  cooldown: 20

training:
  save_path: "/work/scratch/dziuba/ma_code_runs/trainings/test_debug"
#  gpu_ids: [0]
  save_freq: 10
  num_epochs: 100
  use_cpp: False
  best_eval_mode: "min"

loss:
  train_loss:
    spherical_contrast_panoptic:
      cat_id_radius_order_map_list: [7, 8, 11, 12, 13, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33] # describes the mapping of the semantic class to the order (no specific radius - just order) of hyperspheres - from small hypersphere to big or regarding to index
      radius_diff_dist: 1
      radius_start_val: 0
      radius_loss_weight: 0.5
      similarity_loss_weight: 0.5

#      hypsph_radius_map_list: [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190] # (optional) specify for specific mapping of indx from cat in "cat_id_radius_order_map_list" to radius

#    weighted_sum:
#      loss_list:
#        - info_nce:
#            temperature: 0.1
#        - info_nce:
#            temperature: 0.6
#      weights_list: [0.5, 0.2]
  val_loss:
    spherical_contrast_panoptic:
      cat_id_radius_order_map_list: [ 7, 8, 11, 12, 13, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33 ] #describes the mapping of the semantic class to the order of hyperspheres - from small hypersphere to big or regarding to index
      radius_diff_dist: 1
      radius_start_val: 0
      radius_loss_weight: 0.5
      similarity_loss_weight: 0.5

#    weighted_sum:
#      loss_list:
#        - discriminative_loss: # settings as in "Semantic Instance Segmentation with a Discriminative Loss Function" paper for cityscapes
#            margin_variance: 0.5
#            margin_distance: 1.5
#            weighting_list: [1, 1, 0.001]
#        - discriminative_loss:
#            margin_variance: 1
#            margin_distance: 3
#            weighting_list: [ 1, 1, 0.1 ]
#      weights_list: [ 1, 0.7 ]
  metrics:
    - panoptic_quality:
        filter: None

#  metrics_file_path: "/work/scratch/dziuba/repos/ma_code/cfg/metrics_master.yaml"


data:
  datasets_file_path: "/work/scratch/dziuba/repos/ma_code/cfg/datasets_ref.yaml"
  batch_size: 4
  num_workers: 0
  img_width: 1024
  img_height: 512
  augmentations_file_path: "/work/scratch/dziuba/repos/ma_code/cfg/augmentations.yaml"

logging:
  enable: True
  port: 9999
  name: "LOG"
  save_path: "/work/scratch/dziuba/ma_code_runs/logs/test_debug"
