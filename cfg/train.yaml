model:
#  model_architecture_file_path: "/work/scratch/dziuba/repos/ma_code/cfg/model_example.yaml"
  model_architecture:
#    model_architecture_origin: torchvision
#    model_architecture_name: deeplabv3_resnet50
    model_architecture_origin: segmentation_models_pytorch
    model_architecture_name: unet_resnet50
    pretrained: True
    embedding_dims: 50

  AMP: false
  channels: 3
#  norm_type: 'instance'
#  classes: 7

optimizer:
  optim_type: "adam"
  lr: 0.001
  eps: 0.00000001
  weight_decay: 0

scheduler:
  sched_type: "reduce_on_plateau"
  eps: 0.00000001
  factor: 0.1
  patience: 10
  threshold: 0.0001
  cooldown: 20

training:
  save_path: "/work/scratch/dziuba/ma_code_runs/trainings/test_debug"
  gpu_ids: [0]
  save_freq: 10
  num_epochs: 100
  use_cpp: False
  best_eval_mode: "min"

loss:
  train_loss:
    weighted_sum:
      loss_list:
        - info_nce:
            temperature: 0.1
        - info_nce:
            temperature: 0.6
      weights_list: [0.5, 0.2]
  val_loss:
    weighted_sum:
      loss_list:
        - discriminative_loss: # settings as in "Semantic Instance Segmentation with a Discriminative Loss Function" paper for cityscapes
            margin_variance: 0.5
            margin_distance: 1.5
            weighting_list: [1, 1, 0.001]
        - discriminative_loss:
            margin_variance: 1
            margin_distance: 3
            weighting_list: [ 1, 1, 0.1 ]
      weights_list: [ 1, 0.7 ]
  metrics:
    -
#  metrics_file_path: "/work/scratch/dziuba/repos/ma_code/cfg/metrics_master.yaml"


data:
  datasets_file_path: "/work/scratch/dziuba/repos/ma_code/cfg/datasets_ref.yaml"
  batch_size: 4
  num_workers: 0
  img_width: 1024
  img_height: 512
  augmentations_file_path: "/work/scratch/dziuba/repos/ma_code/cfg/augmentations.yaml"

logging:
  enable: True
  port: 9999
  name: "LOG"
  save_path: "/work/scratch/dziuba/ma_code_runs/logs/test_debug"
